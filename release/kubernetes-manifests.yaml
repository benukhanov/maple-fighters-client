apiVersion: v1
kind: Namespace
metadata:
  name: maple-fighters
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: maple-fighters
stringData:
  POSTGRES_DATABASE_URL: postgres://postgres:postgres@postgres-character:5432/postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: character-service
  namespace: maple-fighters
spec:
  ports:
  - name: character-service-port
    port: 50053
    targetPort: 50053
  selector:
    app: character-service
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: chat-service
  namespace: maple-fighters
spec:
  ports:
  - name: chat-service-port
    port: 50054
    targetPort: 50054
  selector:
    app: chat-service
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: maple-fighters
spec:
  ports:
  - name: frontend-port
    port: 80
    targetPort: 80
  selector:
    app: frontend
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-external
  namespace: maple-fighters
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: frontend
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: game-service
  namespace: maple-fighters
spec:
  ports:
  - name: game-service-port
    port: 50051
    targetPort: 50051
  selector:
    app: game-service
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: gameprovider-service
  namespace: maple-fighters
spec:
  ports:
  - name: gameprovider-service-port
    port: 50052
    targetPort: 50052
  selector:
    app: gameprovider-service
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-character
  namespace: maple-fighters
spec:
  ports:
  - name: postgres-port
    port: 5432
    targetPort: 5432
  selector:
    app: postgres-character
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data-storage
  namespace: maple-fighters
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: character-service
  namespace: maple-fighters
spec:
  replicas: 1
  selector:
    matchLabels:
      app: character-service
  template:
    metadata:
      labels:
        app: character-service
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: POSTGRES_DATABASE_URL
              name: postgres-credentials
        - name: IP_ADDRESS
          value: 0.0.0.0:50053
        - name: RUST_BACKTRACE
          value: full
        - name: RUST_LOG
          value: info
        image: maplefighters/character-service:1.0.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 50053
          initialDelaySeconds: 15
          periodSeconds: 10
        name: character-service
        ports:
        - containerPort: 50053
        readinessProbe:
          httpGet:
            path: /healthz
            port: 50053
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: 200m
            memory: 32Mi
          requests:
            cpu: 100m
            memory: 16Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-service
  namespace: maple-fighters
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat-service
  template:
    metadata:
      labels:
        app: chat-service
    spec:
      containers:
      - env:
        - name: PORT
          value: "50054"
        image: maplefighters/chat-service:1.0.0
        imagePullPolicy: Always
        name: chat-service
        ports:
        - containerPort: 50054
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: maple-fighters
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - image: maplefighters/frontend:1.0.0
        imagePullPolicy: Always
        name: frontend
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 200m
            memory: 32Mi
          requests:
            cpu: 100m
            memory: 16Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: game-service
  namespace: maple-fighters
spec:
  replicas: 1
  selector:
    matchLabels:
      app: game-service
  template:
    metadata:
      labels:
        app: game-service
    spec:
      containers:
      - env:
        - name: MAX_CONNECTIONS
          value: "100"
        - name: CONFIG_SOURCE
          value: v1.0
        - name: FLECK_LOG
          value: Info
        - name: GAME_LOG
          value: Debug
        - name: IM_LOG
          value: Debug
        - name: URL
          value: ws://0.0.0.0:50051
        image: maplefighters/game-service:1.0.0
        imagePullPolicy: Always
        name: game-service
        ports:
        - containerPort: 50051
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gameprovider-service
  namespace: maple-fighters
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gameprovider-service
  template:
    metadata:
      labels:
        app: gameprovider-service
    spec:
      containers:
      - env:
        - name: IP_ADDRESS
          value: 0.0.0.0:50052
        - name: RUST_BACKTRACE
          value: full
        - name: RUST_LOG
          value: info
        - name: CONFIG_SOURCE
          value: v1.0
        - name: CONFIG_ENVIRONMENT
          value: Production
        image: maplefighters/gameprovider-service:1.0.0
        imagePullPolicy: Always
        name: gameprovider-service
        ports:
        - containerPort: 50052
        resources:
          limits:
            cpu: 200m
            memory: 32Mi
          requests:
            cpu: 100m
            memory: 16Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-character
  namespace: maple-fighters
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-character
  template:
    metadata:
      labels:
        app: postgres-character
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: POSTGRES_USER
              name: postgres-credentials
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: postgres-credentials
        image: postgres:13
        imagePullPolicy: IfNotPresent
        name: postgres-character
        ports:
        - containerPort: 5432
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
      restartPolicy: Always
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data-storage
